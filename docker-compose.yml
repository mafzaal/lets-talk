volumes:
    postgresql-storage:
        driver: local
    qdrant-storage:
        driver: local

services:
    redis:
        image: redis:8
        healthcheck:
            test: redis-cli ping
            interval: 5s
            timeout: 1s
            retries: 5
        volumes:
           - /etc/localtime:/etc/localtime:ro
           - /etc/timezone:/etc/timezone:ro
        environment:
            TZ: ${TZ:-UTC}
        restart: unless-stopped
    postgres:
        image: postgres:17
        env_file:
            - .env.prod
        environment:
            LANGGRAPH_DB: ${LANGGRAPH_DB:-langgraph_db}
            POSTGRES_USER: ${POSTGRES_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            LETS_TALK_DB: ${LETS_TALK_DB:-lets_talk}
            TZ: ${TZ:-UTC}
        volumes:
            - postgresql-storage:/var/lib/postgresql/data
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
        healthcheck:
            test: pg_isready -U postgres
            start_period: 10s
            timeout: 1s
            retries: 5
            interval: 5s
        restart: unless-stopped
    qdrant:
        image: qdrant/qdrant
        volumes:
            - qdrant-storage:/qdrant/storage
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
        environment:
            TZ: ${TZ:-UTC}
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:6333/collections"]
            interval: 10s
            timeout: 5s
            retries: 5
    api:
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "9124:8000"
        depends_on:
            redis:
                condition: service_healthy
            postgres:
                condition: service_healthy
            qdrant:
                condition: service_started
        env_file:
            - .env.prod
        volumes:
           - ${DATA_DIR_HOST}:${DATA_DIR}
           - ${OUTPUT_DIR_HOST}:${OUTPUT_DIR}
           - /etc/localtime:/etc/localtime:ro
           - /etc/timezone:/etc/timezone:ro
        environment:
            REDIS_URI: redis://redis:6379
            QDRANT_URL: http://qdrant:6333
            POSTGRES_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${LANGGRAPH_DB}?sslmode=disable
            DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${LETS_TALK_DB}?sslmode=disable
            TZ: ${TZ:-UTC}
        restart: unless-stopped

    proxy:
        image: nginx:alpine
        ports:
            - "9123:80"
        depends_on:
            api:
                condition: service_started
        env_file:
            - .env.auth
        volumes:
            - ./nginx.conf.template:/etc/nginx/nginx.conf.template:ro
            - ./nginx-startup.sh:/docker-entrypoint.d/nginx-startup.sh:ro
            - /etc/localtime:/etc/localtime:ro
            - /etc/timezone:/etc/timezone:ro
        environment:
            TZ: ${TZ:-UTC}
        command: ["/docker-entrypoint.d/nginx-startup.sh"]
        restart: unless-stopped
    

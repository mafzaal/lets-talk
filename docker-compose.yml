volumes:
    langgraph-data:
        driver: local
    qdrant-storage:
        driver: local

services:
    langgraph-redis:
        image: redis:6
        healthcheck:
            test: redis-cli ping
            interval: 5s
            timeout: 1s
            retries: 5
        restart: unless-stopped
    langgraph-postgres:
        image: postgres:16
        ports:
            - "5433:5432"
        env_file:
            - .env.prod
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_DB}
        volumes:
            - langgraph-data:/var/lib/postgresql/data
        healthcheck:
            test: pg_isready -U postgres
            start_period: 10s
            timeout: 1s
            retries: 5
            interval: 5s
        restart: unless-stopped
    langgraph-qdrant:
        image: qdrant/qdrant
        ports:
            - "6333:6333"
            - "6334:6334"
        volumes:
            - qdrant-storage:/qdrant/storage
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:6333/collections"]
            interval: 10s
            timeout: 5s
            retries: 5
    langgraph-api:
        image: ghcr.io/mafzaal/lets-talk:main 
        ports:
            - "8124:8000"
        depends_on:
            langgraph-redis:
                condition: service_healthy
            langgraph-postgres:
                condition: service_healthy
            langgraph-qdrant:
                condition: service_started
        env_file:
            - .env.prod
        volumes:
           - ${DATA_DIR_HOST}:${DATA_DIR}
           - ${OUTPUT_DIR_HOST}:${OUTPUT_DIR}
        environment:
            REDIS_URI: redis://langgraph-redis:6379
            QDRANT_URL: http://langgraph-qdrant:6333
            POSTGRES_URI:  postgres://${POSTGRES_USER}:${POSTGRES_USER}@langgraph-postgres:5432/${POSTGRES_DB}?sslmode=disable
        restart: unless-stopped
    
    nginx-proxy:
        image: nginx:alpine
        ports:
            - "8123:80"
        depends_on:
            - langgraph-api
        env_file:
            - .env.auth
        volumes:
            - ./nginx.conf.template:/etc/nginx/nginx.conf.template:ro
            - ./nginx-startup.sh:/docker-entrypoint.d/nginx-startup.sh:ro
        command: ["/docker-entrypoint.d/nginx-startup.sh"]
        restart: unless-stopped
    
